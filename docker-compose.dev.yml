version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: japanese_learning_db
    environment:
      POSTGRES_DB: japanese_learning
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5438:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-configs/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d japanese_learning"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: japanese_learning_redis
    ports:
      - "6383:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: japanese_learning_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug

volumes:
  postgres_data:
  redis_data:
  backend_uploads: